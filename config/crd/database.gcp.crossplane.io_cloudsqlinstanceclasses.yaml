
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: cloudsqlinstanceclasses.database.gcp.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .specTemplate.providerRef.name
    name: PROVIDER-REF
    type: string
  - JSONPath: .specTemplate.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: database.gcp.crossplane.io
  names:
    kind: CloudsqlInstanceClass
    listKind: CloudsqlInstanceClassList
    plural: cloudsqlinstanceclasses
    singular: cloudsqlinstanceclass
  scope: ""
  subresources: {}
  validation:
    openAPIV3Schema:
      description: A CloudsqlInstanceClass is a non-portable resource class. It defines
        the desired spec of resource claims that use it to dynamically provision a
        managed resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        specTemplate:
          description: SpecTemplate is a template for the spec of a dynamically provisioned
            CloudsqlInstance.
          properties:
            authorizedNetworks:
              description: AuthorizedNetworks is the list of external networks that
                are allowed to connect to the instance using the IP. In CIDR notation,
                also known as 'slash' notation (e.g. 192.168.100.0/24).
              items:
                type: string
              type: array
            databaseVersion:
              description: DatabaseVersion specifies he database engine type and version.
                MySQL Second Generation instances use MYSQL_5_7 (default) or MYSQL_5_6.
                MySQL First Generation instances use MYSQL_5_6 (default) or MYSQL_5_5
                PostgreSQL instances uses POSTGRES_9_6 (default) or POSTGRES_11.
              type: string
            ipv4Enabled:
              description: Ipv4Enabled specifies whether the instance should be assigned
                an IP address or not.
              type: boolean
            labels:
              additionalProperties:
                type: string
              description: Labels to apply to this CloudSQL instance.
              type: object
            nameFormat:
              description: NameFormat specifies the name of the extenral CloudSQL
                instance. The first instance of the string '%s' will be replaced with
                the Kubernetes UID of this CloudsqlInstance.
              type: string
            privateNetwork:
              description: PrivateNetwork is the resource link for the VPC network
                from which the Cloud SQL instance is accessible for private IP. For
                example, /projects/myProject/global/networks/default. This setting
                can be updated, but it cannot be removed after it is set.
              type: string
            providerRef:
              description: ProviderReference specifies the provider that will be used
                to create, observe, update, and delete managed resources that are
                dynamically provisioned using this resource class.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            reclaimPolicy:
              description: ReclaimPolicy specifies what will happen to external resources
                when managed resources dynamically provisioned using this resource
                class are deleted. "Delete" deletes the external resource, while "Retain"
                (the default) does not. Note this behaviour is subtly different from
                other uses of the ReclaimPolicy concept within the Kubernetes ecosystem
                per https://github.com/crossplaneio/crossplane-runtime/issues/21
              type: string
            region:
              description: Region specifies the geographical region of this CloudSQL
                instance.
              type: string
            storageGB:
              description: StorageGB specifies the size of the data disk. The minimum
                is 10GB.
              format: int64
              type: integer
            storageType:
              description: StorageType specifies the type of the data disk, either
                PD_SSD or PD_HDD.
              type: string
            tier:
              description: Tier (or machine type) for this instance, for example db-n1-standard-1
                (MySQL instances) or db-custom-1-3840 (PostgreSQL instances). For
                MySQL instances, this property determines whether the instance is
                First or Second Generation. For more information, see https://cloud.google.com/sql/docs/mysql/instance-settings
              type: string
          required:
          - databaseVersion
          - providerRef
          - region
          - storageGB
          - storageType
          - tier
          type: object
      required:
      - specTemplate
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
